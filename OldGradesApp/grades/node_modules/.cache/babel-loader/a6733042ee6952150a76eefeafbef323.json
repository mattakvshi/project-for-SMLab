{"remainingRequest":"C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\node_modules\\babel-loader\\lib\\index.js!C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\src\\services\\RequestExecutor.js","dependencies":[{"path":"C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\src\\services\\RequestExecutor.js","mtime":1713085335298},{"path":"C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1713085328547},{"path":"C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\node_modules\\babel-loader\\lib\\index.js","mtime":1713085328391},{"path":"C:\\Users\\mattakvshi\\Desktop\\SMLabProject\\project-for-SMLab\\OldGradesApp\\grades\\node_modules\\eslint-loader\\index.js","mtime":1713085330125}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6L1VzZXJzL21hdHRha3ZzaGkvRGVza3RvcC9TTUxhYlByb2plY3QvcHJvamVjdC1mb3ItU01MYWIvT2xkR3JhZGVzQXBwL2dyYWRlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBfb2JqZWN0U3ByZWFkIGZyb20gIkM6L1VzZXJzL21hdHRha3ZzaGkvRGVza3RvcC9TTUxhYlByb2plY3QvcHJvamVjdC1mb3ItU01MYWIvT2xkR3JhZGVzQXBwL2dyYWRlcy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vb2JqZWN0U3ByZWFkMiI7CmltcG9ydCBfY2xhc3NDYWxsQ2hlY2sgZnJvbSAiQzovVXNlcnMvbWF0dGFrdnNoaS9EZXNrdG9wL1NNTGFiUHJvamVjdC9wcm9qZWN0LWZvci1TTUxhYi9PbGRHcmFkZXNBcHAvZ3JhZGVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jbGFzc0NhbGxDaGVjayI7CmltcG9ydCBfY3JlYXRlQ2xhc3MgZnJvbSAiQzovVXNlcnMvbWF0dGFrdnNoaS9EZXNrdG9wL1NNTGFiUHJvamVjdC9wcm9qZWN0LWZvci1TTUxhYi9PbGRHcmFkZXNBcHAvZ3JhZGVzL25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CgovKioNCiAqINCg0LXQsNC70LjQt9Cw0YbQuNGPIEhUVFAt0LrQu9C40LXQvdGC0LAgKNCy0LzQtdGB0YLQviBheGlvcykuDQogKiDQvNC10YLQvtC00Ys6IGdldCwgcG9zdCwgcHV0LCBkZWxldGUNCiAqIEB0aGlzIGJhc2VVcmwgLSDQsdCw0LfQvtCy0YvQuSB1cmwgLSBhcGkvKHJlc3QgcnBjIGN1cnNvcikvc2NoZW1hL3BhY2thZ2UvDQogKiBAdGhpcyBsb2FkaW5nTWFzayAtINGE0LvQsNCzLCDQstC60Lsv0LLRi9C60Lsg0LzQsNGB0LrRgw0KICovCmltcG9ydCBzdG9yZSBmcm9tICdAL3N0b3JlJzsKdmFyIElOSVQgPSB7CiAgaGVhZGVyczogewogICAgIkNvbnRlbnQtVHlwZSI6ICJhcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTgiCiAgfQp9OwoKdmFyIFJlcXVlc3RFeGVjdXRvciA9IC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgLy9UT0RPOiBDYW5jZWwgcmVxdWVzdAogIGZ1bmN0aW9uIFJlcXVlc3RFeGVjdXRvcigpIHsKICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBSZXF1ZXN0RXhlY3V0b3IpOwoKICAgIHRoaXMuYmFzZVVybCA9ICIiOwogICAgdGhpcy5sb2FkaW5nTWFzayA9IHRydWU7IC8v0L7RgtC60LvRjtGH0LDRgtGMLCDQtdGB0LvQuCDQvdC1INGC0YDQtdCx0YPQtdGC0YHRjyDQs9C70L7QsdCw0LvRjNC90LDRjyDQvNCw0YHQutCwCgogICAgY29uc29sZS5pbmZvKCJSZXF1ZXN0IEV4ZWN1dG9yIEluaXQhIik7CiAgfQogIC8qKg0KICAgKiBHRVQNCiAgICoNCiAgICogQHBhcmFtIHtzdHJpbmd9IHVybCBFbmRwb2ludC4NCiAgICogQHBhcmFtIHtudW1iZXJ9IGNvZGUg0JrQvtC0LCDQtdGB0LvQuCDQtdGB0YLRjC4NCiAgICogQHJldHVybiB7UHJvbWlzZX0NCiAgICovCgoKICBfY3JlYXRlQ2xhc3MoUmVxdWVzdEV4ZWN1dG9yLCBbewogICAga2V5OiAiZ2V0IiwKICAgIHZhbHVlOiBmdW5jdGlvbiBnZXQodXJsLCBjb2RlKSB7CiAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGUoY29kZSA/IHVybCArICIvIiArIGNvZGUgOiB1cmwsIGZhbHNlLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIElOSVQpLCB7fSwgewogICAgICAgIG1ldGhvZDogIkdFVCIKICAgICAgfSkpOwogICAgfQogICAgLyoqDQogICAgICogUE9TVA0KICAgICAqDQogICAgICogQHBhcmFtIHtzdHJpbmd9IHVybCBFbmRwb2ludC4NCiAgICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YSDQntCx0YrQtdC60YIg0YEg0LTQsNC90L3Ri9C80LguINCR0YPQtNC10YIg0L/QvtC80LXRidGR0L0g0LIg0YLQtdC70L4g0LfQsNC/0YDQvtGB0LAuDQogICAgICogQHJldHVybiB7UHJvbWlzZX0NCiAgICAgKi8KCiAgfSwgewogICAga2V5OiAicG9zdCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcG9zdCh1cmwsIGRhdGEpIHsKICAgICAgcmV0dXJuIHRoaXMuZXhlY3V0ZSh1cmwsIGZhbHNlLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIElOSVQpLCB7fSwgewogICAgICAgIG1ldGhvZDogIlBPU1QiCiAgICAgIH0pLCBkYXRhKTsKICAgIH0KICAgIC8qKg0KICAgICAqIFBVVA0KICAgICAqDQogICAgICogQHBhcmFtIHtzdHJpbmd9IHVybCBFbmRwb2ludC4NCiAgICAgKiBAcGFyYW0ge251bWJlcn0gY29kZSDQmtC+0LQuDQogICAgICogQHBhcmFtIHtvYmplY3R9IGRhdGEg0J7QsdGK0LXQutGCINGBINC00LDQvdC90YvQvNC4LiDQkdGD0LTQtdGCINC/0L7QvNC10YnRkdC9INCyINGC0LXQu9C+INC30LDQv9GA0L7RgdCwLg0KICAgICAqIEByZXR1cm4ge1Byb21pc2V9DQogICAgICovCgogIH0sIHsKICAgIGtleTogInB1dCIsCiAgICB2YWx1ZTogZnVuY3Rpb24gcHV0KHVybCwgY29kZSwgZGF0YSkgewogICAgICByZXR1cm4gdGhpcy5leGVjdXRlKHVybCArICIvIiArIGNvZGUsIGZhbHNlLCBfb2JqZWN0U3ByZWFkKF9vYmplY3RTcHJlYWQoe30sIElOSVQpLCB7fSwgewogICAgICAgIG1ldGhvZDogIlBVVCIKICAgICAgfSksIGRhdGEpOwogICAgfQogICAgLyoqDQogICAgICogREVMRVRFDQogICAgICoNCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsIEVuZHBvaW50Lg0KICAgICAqIEBwYXJhbSB7bnVtYmVyfSBjb2RlINCa0L7QtC4NCiAgICAgKiBAcmV0dXJuIHtQcm9taXNlfQ0KICAgICAqLwoKICB9LCB7CiAgICBrZXk6ICJkZWxldGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uIF9kZWxldGUodXJsLCBjb2RlKSB7CiAgICAgIHJldHVybiB0aGlzLmV4ZWN1dGUodXJsICsgIi8iICsgY29kZSwgZmFsc2UsIF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgSU5JVCksIHt9LCB7CiAgICAgICAgbWV0aG9kOiAiREVMRVRFIgogICAgICB9KSk7CiAgICB9CiAgICAvKioNCiAgICAgKiBFWEVDVVRFDQogICAgICoNCiAgICAgKiBAcGFyYW0ge3N0cmluZ30gdXJsIEVuZHBvaW50Lg0KICAgICAqIEBwYXJhbSB7Ym9vbGVhbn0gZXhhY3Qg0L3QtSDQv9C+0LTRgdGC0LDQstC70Y/RgtGMIGJhc2VVcmwNCiAgICAgKiBAcGFyYW0ge29iamVjdH0gaW5pdCDQv9Cw0YDQsNC80LXRgtGA0Ysg0LfQsNC/0YDQvtGB0LANCiAgICAgKiBAcGFyYW0ge29iamVjdH0gZGF0YSDRgtC10LvQviDQt9Cw0L/RgNC+0YHQsA0KICAgICAqIEByZXR1cm4ge1Byb21pc2V9DQogICAgICovCgogIH0sIHsKICAgIGtleTogImV4ZWN1dGUiLAogICAgdmFsdWU6IGZ1bmN0aW9uICgpIHsKICAgICAgdmFyIF9leGVjdXRlID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHVybCwgZXhhY3QsIGluaXQsIGRhdGEpIHsKICAgICAgICB2YXIgbG9jYXRpb24sIHJlc3BvbnNlOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGlmICh0aGlzLmxvYWRpbmdNYXNrKSBzdG9yZS5jb21taXQoInNldElzTG9hZGluZyIsIHRydWUpOwogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE7CiAgICAgICAgICAgICAgICBpZiAoZGF0YSkgaW5pdCA9IF9vYmplY3RTcHJlYWQoX29iamVjdFNwcmVhZCh7fSwgaW5pdCksIHt9LCB7CiAgICAgICAgICAgICAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KGRhdGEpCiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgIGxvY2F0aW9uID0gZXhhY3QgPyB1cmwgOiB0aGlzLmJhc2VVcmwgKyB1cmw7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiBmZXRjaChsb2NhdGlvbiwgaW5pdCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIHJlc3BvbnNlID0gX2NvbnRleHQuc2VudDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSA5OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA5OgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIiwgX2NvbnRleHQuc2VudCk7CgogICAgICAgICAgICAgIGNhc2UgMTI6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMTI7CiAgICAgICAgICAgICAgICBfY29udGV4dC50MCA9IF9jb250ZXh0WyJjYXRjaCJdKDEpOwogICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDE2OwogICAgICAgICAgICAgICAgc3RvcmUuY29tbWl0KCJzZXRJc0xvYWRpbmciLCBmYWxzZSk7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuZmluaXNoKDE2KTsKCiAgICAgICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIHRoaXMsIFtbMSwgMTIsIDE2LCAxOV1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZXhlY3V0ZShfeCwgX3gyLCBfeDMsIF94NCkgewogICAgICAgIHJldHVybiBfZXhlY3V0ZS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZXhlY3V0ZTsKICAgIH0oKQogIH1dKTsKCiAgcmV0dXJuIFJlcXVlc3RFeGVjdXRvcjsKfSgpOwoKZXhwb3J0IGRlZmF1bHQgbmV3IFJlcXVlc3RFeGVjdXRvcigpOw=="},{"version":3,"sources":["C:/Users/mattakvshi/Desktop/SMLabProject/project-for-SMLab/OldGradesApp/grades/src/services/RequestExecutor.js"],"names":["store","INIT","headers","RequestExecutor","baseUrl","loadingMask","console","info","url","code","execute","method","data","exact","init","commit","body","JSON","stringify","location","fetch","response","json","error","Error"],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,SAAlB;AAEA,IAAMC,IAAI,GAAG;AACTC,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX;AADA,CAAb;;IAMMC,e;AACF;AACA,6BAAc;AAAA;;AACV,SAAKC,OAAL,GAAe,EAAf;AACA,SAAKC,WAAL,GAAmB,IAAnB,CAFU,CAEe;;AACzBC,IAAAA,OAAO,CAACC,IAAR,CAAa,wBAAb;AACH;AAED;AACJ;AACA;AACA;AACA;AACA;AACA;;;;;WACI,aAAIC,GAAJ,EAASC,IAAT,EAAe;AAAC,aAAO,KAAKC,OAAL,CAAcD,IAAI,GAAGD,GAAG,GAAG,GAAN,GAAYC,IAAf,GAAsBD,GAAxC,EAA8C,KAA9C,kCAAyDP,IAAzD;AAA+DU,QAAAA,MAAM,EAAE;AAAvE,SAAP;AAAuF;AAEvG;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,cAAKH,GAAL,EAAUI,IAAV,EAAgB;AAAC,aAAO,KAAKF,OAAL,CAAaF,GAAb,EAAkB,KAAlB,kCAA6BP,IAA7B;AAAmCU,QAAAA,MAAM,EAAE;AAA3C,UAAoDC,IAApD,CAAP;AAAkE;AAEnF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;;;;WACI,aAAIJ,GAAJ,EAASC,IAAT,EAAeG,IAAf,EAAqB;AAAC,aAAO,KAAKF,OAAL,CAAaF,GAAG,GAAG,GAAN,GAAYC,IAAzB,EAA+B,KAA/B,kCAA0CR,IAA1C;AAAgDU,QAAAA,MAAM,EAAE;AAAxD,UAAgEC,IAAhE,CAAP;AAA8E;AAEpG;AACJ;AACA;AACA;AACA;AACA;AACA;;;;WACI,iBAAOJ,GAAP,EAAYC,IAAZ,EAAkB;AAAC,aAAO,KAAKC,OAAL,CAAaF,GAAG,GAAG,GAAN,GAAYC,IAAzB,EAA+B,KAA/B,kCAA0CR,IAA1C;AAAgDU,QAAAA,MAAM,EAAE;AAAxD,SAAP;AAA2E;AAG9F;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;6EAEI,iBAAcH,GAAd,EAAmBK,KAAnB,EAA0BC,IAA1B,EAAgCF,IAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,oBAAG,KAAKP,WAAR,EAAqBL,KAAK,CAACe,MAAN,CAAa,cAAb,EAA6B,IAA7B;AADzB;AAIQ,oBAAGH,IAAH,EAASE,IAAI,mCAAOA,IAAP;AAAaE,kBAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,IAAf;AAAnB,kBAAJ;AAEHO,gBAAAA,QANd,GAMyBN,KAAK,GAAGL,GAAH,GAAS,KAAKJ,OAAL,GAAeI,GANtD;AAAA;AAAA,uBAO+BY,KAAK,CAACD,QAAD,EAAWL,IAAX,CAPpC;;AAAA;AAOcO,gBAAAA,QAPd;AAAA;AAAA,uBAUqBA,QAAQ,CAACC,IAAT,EAVrB;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAaQhB,gBAAAA,OAAO,CAACiB,KAAR;AAbR,sBAcc,IAAIC,KAAJ,aAdd;;AAAA;AAAA;AAiBQxB,gBAAAA,KAAK,CAACe,MAAN,CAAa,cAAb,EAA6B,KAA7B;AAjBR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;AAsBJ,eAAe,IAAIZ,eAAJ,EAAf","sourcesContent":["/**\r\n * Реализация HTTP-клиента (вместо axios).\r\n * методы: get, post, put, delete\r\n * @this baseUrl - базовый url - api/(rest rpc cursor)/schema/package/\r\n * @this loadingMask - флаг, вкл/выкл маску\r\n */\r\nimport store from '@/store'\r\n\r\nconst INIT = {\r\n    headers: {\r\n        \"Content-Type\": \"application/json;charset=utf-8\"\r\n    }\r\n};\r\n\r\nclass RequestExecutor {\r\n    //TODO: Cancel request\r\n    constructor() {\r\n        this.baseUrl = \"\";\r\n        this.loadingMask = true; //отключать, если не требуется глобальная маска\r\n        console.info(\"Request Executor Init!\");\r\n    }\r\n\r\n    /**\r\n     * GET\r\n     *\r\n     * @param {string} url Endpoint.\r\n     * @param {number} code Код, если есть.\r\n     * @return {Promise}\r\n     */\r\n    get(url, code) {return this.execute((code ? url + \"/\" + code : url), false, {...INIT, method: \"GET\"});}\r\n\r\n    /**\r\n     * POST\r\n     *\r\n     * @param {string} url Endpoint.\r\n     * @param {object} data Объект с данными. Будет помещён в тело запроса.\r\n     * @return {Promise}\r\n     */\r\n    post(url, data) {return this.execute(url, false, {...INIT, method: \"POST\"}, data);}\r\n\r\n    /**\r\n     * PUT\r\n     *\r\n     * @param {string} url Endpoint.\r\n     * @param {number} code Код.\r\n     * @param {object} data Объект с данными. Будет помещён в тело запроса.\r\n     * @return {Promise}\r\n     */\r\n    put(url, code, data) {return this.execute(url + \"/\" + code, false, {...INIT, method: \"PUT\"}, data);}\r\n\r\n    /**\r\n     * DELETE\r\n     *\r\n     * @param {string} url Endpoint.\r\n     * @param {number} code Код.\r\n     * @return {Promise}\r\n     */\r\n    delete(url, code) {return this.execute(url + \"/\" + code, false, {...INIT, method: \"DELETE\"});}\r\n\r\n    \r\n    /**\r\n     * EXECUTE\r\n     *\r\n     * @param {string} url Endpoint.\r\n     * @param {boolean} exact не подставлять baseUrl\r\n     * @param {object} init параметры запроса\r\n     * @param {object} data тело запроса\r\n     * @return {Promise}\r\n     */\r\n    \r\n    async execute(url, exact, init, data) {\r\n        if(this.loadingMask) store.commit(\"setIsLoading\", true);\r\n\r\n        try {\r\n            if(data) init = {...init, body: JSON.stringify(data)};\r\n\r\n            const location = exact ? url : this.baseUrl + url;\r\n            const response = await fetch(location, init);\r\n            //if(!response.ok) throw new Error(\"Network error!\");\r\n\r\n            return await response.json();\r\n\r\n        } catch(error) {\r\n            console.error(error);\r\n            throw new Error(error);\r\n\r\n        } finally {\r\n            store.commit(\"setIsLoading\", false);\r\n        }\r\n    }\r\n}\r\n\r\nexport default new RequestExecutor();"]}]}